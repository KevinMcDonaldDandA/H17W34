@model MoviesProject.ViewModels.CreateMovieVM

@{
    ViewBag.Title = "Create Movie";
}

<h2>Create Movie</h2>


@using (Html.BeginForm("Create", "Movies", FormMethod.Post, new { enctype = "multipart/form-data"}))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Movie</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.Summary, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.Summary, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.Summary, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.UserRating, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Movie.UserRating, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Movie.UserRating, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.DirectorId, "DirectorId", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Movie.DirectorId, new SelectList(Model.Directors, "ID", "Fullname"), "Select Director...", new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Movie.DirectorId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Movie.ImagePath, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <label class="btn btn-primary btn-file">
                Browse <input type="file" style="display: none;" name="file" accept="image/png,image/jpg,image/jpeg" id="picFile">
            </label>
            @Html.ValidationMessageFor(model => model.Movie.ImagePath, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="row">
            <div class="col-md-4">
                @Html.LabelFor(model => model.Movie.Actors, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Movie.Actors, new SelectList(Model.Movie.Actors, "Id", "Fullname"), new { @class = "form-control", multiple = "multiple", id = "movieactors" })
                    @Html.ValidationMessageFor(model => model.Movie.Actors, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="col-md-4">
                <ul>
                    <li class="btn btn-primary" id="addActor">Add</li>
                    <li class="btn btn-primary" id="removeActor">Remove</li>
                </ul>
            </div>
            <div class="col-md-4">
                @Html.LabelFor(model => model.Actors, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-12">
                    @Html.DropDownListFor(model => model.Actors, new SelectList(Model.Actors, "Id", "Fullname"), new { @class = "form-control", multiple = "multiple", id="allactors" })
                    @Html.ValidationMessageFor(model => model.Actors, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
    </div>




    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        $("#addActor").click(function () {
            var selected = $("#allactors option:selected");            
            console.log(selected);
            for (var item in selected) {
                var option = "<option value='" + item["value"] + "'";
                option += item.text();
                option += "</option>"
                $("#movieactors").append(option);
            }            
        });
    </script>
}
